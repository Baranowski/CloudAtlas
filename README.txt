Introduction
============

This project was written for the "Distributed Systems" class in 2014 at
University of Warsaw. The system is a simplified implementation of Astrolabe.
Below follows translation of the Polish readme file.

Requirements
============

The project was tested in GNU/Linux system, distribution Ubuntu 12.04 LTS. In
order to build it you need:
* the make program
* an up-to-date GHC platform, including the GHC compiler and the cabal tool.

Compilation
===========

Issue the following command:
$ make

while connected to the Internet. The cabal tool will automatically download all
necessary libraries and then build the project. In the bin/ subfolder three
executables should appear:
* CloudAtlas
* Client
* CATool

All executables print short usage help.

Generating keys and certificates
================================

Example:

# Create a database for a CA in the db/ subfolder
$ CATool db --init

# Create certificates for level-1 zones:
$ CATool db --create-zone /uw
$ CATool db --create-zone /pjwstk

# Create certificates for subzones of the zone /uw:
$ CATool db --create-zone /uw/violet07
$ CATool db --create-zone /uw/khaki13
$ CATool db --create-zone /uw/khaki31

# Create a database for another CA corresponding to the /pjwstk zone:
$ CATool db/pjwstk --init /pjwstk

# Create certificates for subzones of the zone /pjwstk:
$ CATool db/pjwstk --create-zone /whatever01
$ CATool db/pjwstk --create-zone /whatever02

# Utwórz certyfikat dla klienta, który może modyfikować tylko:
# Create a certificate for a client, who may only modify:
#   Zones /uw/khaki13 and /uw/khaki31
#   Attributes num_processes and max_processes
$ CATool db/pjwstk --client-cert "/uw/khaki13,/uw/khaki31" "num_processes,max_processes"

The CATool creates the following files:
 * ca.pub and ca.priv in the main folder of the database
   - CA's keys
 * zone.cert and zone.priv in the database subfolders
   - the certificate and private key of a zone
 * client_*.cert and client_*.priv in the folder of execution
   - the client's certificate and private key

Contents of the ca.pub, zone.cert and zone.priv files should be copy-pasted to
corresponding fields of the server config file.

Usage
=====

To start an agent, execute command:
$ CloudAtlas <config file>

A sample config file can be found in the main folder of the project.

To start a client, execute one of the commands:

(1) To start as a daemon:
$ Client <client.cert> <client.priv> <config file>

Where client.cert and client.priv are paths to corresponding files generated by
the CA. A sample config file (client.ini) is provided.

A daemon-client will in specified intervals communicate with a specified agent
and send attributes.

(2) To start a client in interactive mode:
$ Client <client.cert> <client.priv> <server>:<port>

The client will accept commands from standard input and communicate with an
agent listening at <server>:<port>. A list of available commands will be printed
after issuing an unknown command, for example 'help'.

Testing
=======

The test/ subfolder contains files installing and removing a query that
generates the num_processes attribute. In order to conduct a test with this
query and the standard zone layout, you need to:
* Start 5 instances of the CloudAtlas program
* Start 5 instances of the Client program, working as a daemon
* Set the backup contacts for at least some of the agents:
    $ Client <host1>:<port1>
    > set_contacts <host2>:<port2> [ <host3>:<port3> ... ]
    OK
* Generate a certificate (for example, with no restrictions):
    $ CATool db --client-cert "*" "*"
* Install the query in any zone:
    $ bin/Client client_*.cert client_*.priv <host1>:<port1> < test/num_processes
* Check attributes of a chosen zone:
    $ bin/Client client_*.cert client_*.priv <host1>:<port1>
    > zone /
    ...
    num_processes : integer = 624
    ...
